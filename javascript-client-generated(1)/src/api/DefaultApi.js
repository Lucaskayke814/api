/*
 * SEI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.42
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Payload', 'model/Payload1', 'model/Payload2', 'model/Payload3', 'model/Payload4', 'model/Payload5'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Payload'), require('../model/Payload1'), require('../model/Payload2'), require('../model/Payload3'), require('../model/Payload4'), require('../model/Payload5'));
  } else {
    // Browser globals (root is window)
    if (!root.Sei) {
      root.Sei = {};
    }
    root.Sei.DefaultApi = factory(root.Sei.ApiClient, root.Sei.Payload, root.Sei.Payload1, root.Sei.Payload2, root.Sei.Payload3, root.Sei.Payload4, root.Sei.Payload5);
  }
}(this, function(ApiClient, Payload, Payload1, Payload2, Payload3, Payload4, Payload5) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 1.0.0
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the concluirProcessoPost operation.
     * @callback module:api/DefaultApi~concluirProcessoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload2} opts.payload Request Body
     * @param {module:api/DefaultApi~concluirProcessoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.concluirProcessoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/concluirProcesso', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the consultarProcedimentoPost operation.
     * @callback module:api/DefaultApi~consultarProcedimentoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload3} opts.payload Request Body
     * @param {module:api/DefaultApi~consultarProcedimentoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.consultarProcedimentoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/consultarProcedimento', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the criarProcessoPost operation.
     * @callback module:api/DefaultApi~criarProcessoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload} opts.payload Request Body
     * @param {module:api/DefaultApi~criarProcessoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.criarProcessoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/criarProcesso', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the gerarProcedimentoPost operation.
     * @callback module:api/DefaultApi~gerarProcedimentoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload5} opts.payload Request Body
     * @param {module:api/DefaultApi~gerarProcedimentoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.gerarProcedimentoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/gerarProcedimento', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the incluirDocumentoPost operation.
     * @callback module:api/DefaultApi~incluirDocumentoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload1} opts.payload Request Body
     * @param {module:api/DefaultApi~incluirDocumentoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.incluirDocumentoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/incluirDocumento', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the reabrirProcessoPost operation.
     * @callback module:api/DefaultApi~reabrirProcessoPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/Payload4} opts.payload Request Body
     * @param {module:api/DefaultApi~reabrirProcessoPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.reabrirProcessoPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['payload'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/reabrirProcesso', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
