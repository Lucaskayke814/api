/*
 * SEI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.42
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Sei);
  }
}(this, function(expect, Sei) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Payload1', function() {
      beforeEach(function() {
        instance = new Sei.Payload1();
      });

      it('should create an instance of Payload1', function() {
        // TODO: update the code to test Payload1
        expect(instance).to.be.a(Sei.Payload1);
      });

      it('should have the property siglaSistema (base name: "siglaSistema")', function() {
        // TODO: update the code to test the property siglaSistema
        expect(instance).to.have.property('siglaSistema');
        // expect(instance.siglaSistema).to.be(expectedValueLiteral);
      });

      it('should have the property identificacaoServico (base name: "identificacaoServico")', function() {
        // TODO: update the code to test the property identificacaoServico
        expect(instance).to.have.property('identificacaoServico');
        // expect(instance.identificacaoServico).to.be(expectedValueLiteral);
      });

      it('should have the property idUnidade (base name: "idUnidade")', function() {
        // TODO: update the code to test the property idUnidade
        expect(instance).to.have.property('idUnidade');
        // expect(instance.idUnidade).to.be(expectedValueLiteral);
      });

      it('should have the property tipo (base name: "tipo")', function() {
        // TODO: update the code to test the property tipo
        expect(instance).to.have.property('tipo');
        // expect(instance.tipo).to.be(expectedValueLiteral);
      });

      it('should have the property idProcedimento (base name: "idProcedimento")', function() {
        // TODO: update the code to test the property idProcedimento
        expect(instance).to.have.property('idProcedimento');
        // expect(instance.idProcedimento).to.be(expectedValueLiteral);
      });

      it('should have the property idSerie (base name: "idSerie")', function() {
        // TODO: update the code to test the property idSerie
        expect(instance).to.have.property('idSerie');
        // expect(instance.idSerie).to.be(expectedValueLiteral);
      });

      it('should have the property numero (base name: "numero")', function() {
        // TODO: update the code to test the property numero
        expect(instance).to.have.property('numero');
        // expect(instance.numero).to.be(expectedValueLiteral);
      });

      it('should have the property data (base name: "data")', function() {
        // TODO: update the code to test the property data
        expect(instance).to.have.property('data');
        // expect(instance.data).to.be(expectedValueLiteral);
      });

      it('should have the property descricao (base name: "descricao")', function() {
        // TODO: update the code to test the property descricao
        expect(instance).to.have.property('descricao');
        // expect(instance.descricao).to.be(expectedValueLiteral);
      });

      it('should have the property sigla (base name: "sigla")', function() {
        // TODO: update the code to test the property sigla
        expect(instance).to.have.property('sigla');
        // expect(instance.sigla).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "nome")', function() {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property('nome');
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property nomeArquivo (base name: "nomeArquivo")', function() {
        // TODO: update the code to test the property nomeArquivo
        expect(instance).to.have.property('nomeArquivo');
        // expect(instance.nomeArquivo).to.be(expectedValueLiteral);
      });

      it('should have the property conteudo (base name: "conteudo")', function() {
        // TODO: update the code to test the property conteudo
        expect(instance).to.have.property('conteudo');
        // expect(instance.conteudo).to.be(expectedValueLiteral);
      });

    });
  });

}));
